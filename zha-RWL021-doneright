blueprint:
  name: ZHA - Philips RWL021 Done Right
  description: 'Control lights with a Hue RWL021 Remote (the old ones),
    for use with [ZHA](https://www.home-assistant.io/integrations/zha/).


    Pressing the up button will turn on the lights at the last set brightness (unless
    the force brightness is toggled on in the blueprint).


    Pressing the down button will turn the lights off again.


    Pressing and holding the up/down buttons will change the brightness smoothly and
    can be pressed and hold until the brightness is satisfactory.


    The "up" and "down" buttons can be assigned to a short and long button press
    action. This allows you to assign, e.g., a scene or anything else. Use the up
    and down button events with care, as before the long press event is sent, the
    "on" event gets triggered.

    '
  domain: automation
  input:
    remote:
      name: Remote
      description: RWL021 remote to use
      selector:
        device:
          integration: zha
          manufacturer: Philips
          model: RWL021
          multiple: false
    light:
      name: Light(s)
      description: The light(s) to control
      selector:
        target:
          entity:
            domain: light
    force_brightness:
      name: Force turn on brightness
      description: Force the brightness to the set level below, when the "on" button
        on the remote is pushed and lights turn on.
      default: false
      selector:
        boolean: {}
    brightness:
      name: Brightness
      description: Brightness of the light(s) when turning on
      default: 50
      selector:
        number:
          min: 0.0
          max: 100.0
          mode: slider
          step: 1.0
          unit_of_measurement: '%'
    hold_time:
      name: Hold Time
      description: Time between the execution of the brighter/darker actions when
        holding the brighter/darker button.
      default: 0.5
      selector:
        number:
          min: 0.1
          max: 2.0
          step: 0.1
          unit_of_measurement: seconds
          mode: slider
    down_press:
      name: Down Button
      description: Action to run on short dim down button press
      default: []
      selector:
        action: {}
    down_long_release:
      name: Down Long Press
      description: Action to run on long dim down press. Use with care, as before
        the long press event is sent, the "on" event gets triggered.
      default: []
      selector:
        action: {}
    up_press:
      name: Up Button
      description: Action to run on short dim up button press
      default: []
      selector:
        action: {}
    up_long_release:
      name: Up Long Press
      description: Action to run on long dim up button press. Use with care, as before
        the long press event is sent, the "on" event gets triggered.
      default: []
      selector:
        action: {}
  # source_url: https://community.home-assistant.io
mode: restart
max_exceeded: silent
variables:
  force_brightness: !input force_brightness
trigger:
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input remote
action:
- variables:
    command: '{{ trigger.event.data.command }}'
    cluster_id: '{{ trigger.event.data.cluster_id }}'
    endpoint_id: '{{ trigger.event.data.endpoint_id }}'
    args: '{{ trigger.event.data.args }}'
- choose:
  - conditions:
    - '{{ command == ''on_press'' }}'
    - '{{ cluster_id == 64512 }}'
    - '{{ endpoint_id == 2 }}'
    sequence:
    - choose:
      - conditions: '{{ force_brightness }}'
        sequence:
        - service: light.turn_on
          target: !input light
          data:
            transition: 1
            brightness_pct: !input brightness
      default:
      - service: light.turn_on
        target: !input light
        data:
          transition: 1
  - conditions:
    - '{{ command == ''off_press'' }}'
    - '{{ cluster_id == 64512 }}'
    - '{{ endpoint_id == 2 }}'
    sequence:
    - service: light.turn_off
      target: !input light
      data:
        transition: 1
  - conditions:
    - '{{ command == ''up_hold'' }}'
    - '{{ cluster_id == 64512 }}'
    - '{{ endpoint_id == 2 }}'
    sequence:
    - repeat:
        count: 10
        sequence:
        - service: light.turn_on
          target: !input light
          data:
            brightness_step_pct: 10
            transition: 1
        - delay: !input hold_time
  - conditions:
    - '{{ command == ''down_hold'' }}'
    - '{{ cluster_id == 64512 }}'
    - '{{ endpoint_id == 2 }}'
    sequence:
    - repeat:
        count: 10
        sequence:
        - service: light.turn_on
          target: !input light
          data:
            brightness_step_pct: -10
            transition: 1
        - delay: !input hold_time
  - conditions:
    - '{{ command == ''down_press'' }}'
    - '{{ cluster_id == 64512 }}'
    - '{{ endpoint_id == 2 }}'
    # - '{{ args == [3, 3145728, 0, 33, 0, 0] }}'
    sequence: !input down_press
  - conditions:
    - '{{ command == ''down_long_release'' }}'
    - '{{ cluster_id == 64512 }}'
    - '{{ endpoint_id == 2 }}'
    # - '{{ args == [3, 3145728, 3, 33, 15, 0] }}'
    sequence: !input down_long_release
  - conditions:
    - '{{ command == ''up_press'' }}'
    - '{{ cluster_id == 64512 }}'
    - '{{ endpoint_id == 2 }}'
    # - '{{ args == [2, 3145728, 0, 33, 0, 0] }}'
    sequence: !input up_press
  - conditions:
    - '{{ command == ''up_long_release'' }}'
    - '{{ cluster_id == 64512 }}'
    - '{{ endpoint_id == 2 }}'
    # - '{{ args == [2, 3145728, 3, 33, 12, 0] }}'
    sequence: !input up_long_release
